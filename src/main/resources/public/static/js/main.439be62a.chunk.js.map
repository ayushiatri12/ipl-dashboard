{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","pages/TeamPage.js","components/SelectYear.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","isMatchWon","winner","className","to","date","venue","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","TeamPage","useState","matches","team","setTeam","useParams","useEffect","a","fetch","response","json","data","fetchTeam","title","value","totalMatches","totalWins","color","slice","map","id","process","SelectYear","years","i","push","year","MatchPage","setMatches","fetchMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.439be62a.chunk.js","sourcesContent":["import { React } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport \"./MatchDetailCard.scss\";\r\nexport const MatchDetailCard = ({teamName, match}) => {\r\n  if(!match) return null;\r\n\r\n  const otherTeam = (teamName === match.team1)? match.team2 : match.team1;\r\n  const otherTeamRoute = `/teams/${otherTeam}`;\r\n  const isMatchWon = teamName === match.winner;\r\n  return (\r\n\r\n    <div className={isMatchWon? 'MatchDetailCard won-card':'MatchDetailCard lost-card'}>\r\n      <div> \r\n    <span className=\"vs\">vs</span>\r\n    <h1><Link to = {otherTeamRoute}> {otherTeam}</Link></h1>\r\n    <h2 className=\"match-date\">{match.date}</h2>\r\n    <h3 className=\"match-venue\">at {match.venue}</h3>\r\n    <h3 className=\"match-winner\">{match.winner} won by {match.resultMargin} {match.result}</h3>\r\n    </div>\r\n\r\n    <div className=\"additional-detail\">\r\n    <h3>First Innings</h3>\r\n    <p>{match.team1}</p>\r\n    <h3>Second Innings</h3>\r\n    <p>{match.team2}</p>\r\n    <h3>Man of the Match</h3>\r\n    <p>{match.playerOfMatch}</p>\r\n    <h3>Umpires</h3>\r\n    <p>{match.umpire1}, {match.umpire2}</p>\r\n    </div>\r\n    </div>\r\n  );\r\n}","import { React } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './MatchSmallCard.scss';\r\n\r\nexport const MatchSmallCard = ({teamName, match}) => {\r\n\r\n  if(!match) return null;\r\n\r\n  const otherTeam = (teamName === match.team1)? match.team2 : match.team1;\r\n  const otherTeamRoute = `/teams/${otherTeam}`;\r\n  const isMatchWon = teamName === match.winner;\r\n\r\n  return (\r\n    <div className={isMatchWon? 'MatchSmallCard won-card':'MatchSmallCard lost-card'}>\r\n    <span className=\"vs\">vs</span>\r\n    <h1><Link to = {otherTeamRoute}> {otherTeam}</Link></h1>\r\n    <p className=\"match-result\">{match.winner} won by {match.resultMargin} {match.result}</p>\r\n    </div>\r\n  );\r\n}","import {React, useEffect, useState} from 'react'\r\nimport {MatchDetailCard} from '../components/MatchDetailCard';\r\nimport {MatchSmallCard} from '../components/MatchSmallCard';\r\nimport {useParams,Link} from 'react-router-dom';\r\nimport {PieChart} from 'react-minimal-pie-chart';\r\nimport './TeamPage.scss';\r\n\r\nexport const TeamPage = () => {\r\n  const [team, setTeam] = useState({matches :[]});\r\n  const { teamName } = useParams();\r\n\r\n  useEffect ( () => {\r\n    const fetchTeam = async () => {\r\n      const response = await fetch(`http://localhost:8080/team/${teamName}`);\r\n      const data = await response.json();\r\n      setTeam(data);\r\n    };\r\n    fetchTeam();\r\n  }, [teamName] );\r\n\r\n  if(!team || !team.teamName){\r\n    return <h1>Team not found</h1>\r\n  }\r\n  \r\n  return (\r\n    <div className=\"TeamPage\">\r\n    <div className=\"team-name-section\">\r\n      <h1 className=\"team-name\">{team.teamName}</h1>\r\n      </div>\r\n    <div className=\"win-loss-section\">\r\n      Wins/Losses\r\n      <PieChart \r\n      data = {[\r\n        {title: 'Losses', value: team.totalMatches-team.totalWins, color: '#C93C3C'},\r\n        {title: 'Wins', value: team.totalWins , color: '#088E49' },\r\n      ]}\r\n      />\r\n      </div>\r\n    <div className=\"match-detail-section\">\r\n    <h3>Latest Matches</h3>\r\n    <MatchDetailCard teamName = {team.teamName} match = {team.matches[0]} />\r\n    </div>\r\n    {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName = {team.teamName} match = {match}/>)}\r\n    <div className=\"more-link\">\r\n      <Link to= {`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More ></Link>\r\n    </div>\r\n    </div>\r\n\r\n  );\r\n}","import {React} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './SelectYear.scss'; \r\n\r\nexport const SelectYear = ({teamName}) => {\r\n\r\n    let years = [];\r\n    const startYear = process.env.REACT_APP_DATA_START_YEAR;\r\n    const endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n    for(let i=startYear; i<=endYear; i++){\r\n        years.push(i);\r\n    }\r\n    \r\n    return (\r\n        <ol className=\"year-select\">\r\n            {years.map(year => (\r\n            <li key={year}>\r\n                <Link to= {`/teams/${teamName}/matches/${year}`}>{year}</Link>\r\n            </li>\r\n            )\r\n            )}\r\n        </ol>\r\n    )\r\n}","import {React, useEffect, useState} from 'react'\r\nimport {MatchDetailCard} from '../components/MatchDetailCard';\r\nimport {useParams} from 'react-router-dom';\r\nimport {SelectYear} from '../components/SelectYear'; \r\nimport './MatchPage.scss';\r\n\r\nexport const MatchPage = () => {\r\n    const [matches, setMatches] = useState([]);\r\n    const {teamName, year} = useParams();\r\n\r\n    useEffect ( () => {\r\n        const fetchMatches = async () => {\r\n          const response = await fetch(`http://localhost:8080/team/${teamName}/matches?year=${year}`);\r\n          const data = await response.json();\r\n          setMatches(data);\r\n        };\r\n        fetchMatches();\r\n      }, [teamName, year] );\r\n  return (\r\n    <div className=\"MatchPage\">\r\n\r\n      <div className=\"select-year\">\r\n        <h3>Select Year</h3>\r\n        <SelectYear teamName={teamName}/>\r\n      </div>\r\n\r\n      <div>\r\n        <h1 className = \"page-heading\">{teamName} matches in {year}</h1>\r\n        {matches.map(match => <MatchDetailCard key={match.id} teamName = {teamName} match = {match}/>)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import {React} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './TeamTile.scss';\r\n\r\nexport const TeamTile = ({teamName}) => {\r\n\r\n    return (\r\n        <div className=\"TeamTile\">\r\n            <h1><Link to = {`/teams/${teamName}`}> {teamName}</Link></h1>\r\n        </div>\r\n    )\r\n}","import {React, useEffect, useState} from 'react'\r\nimport './HomePage.scss';\r\nimport {TeamTile} from '../components/TeamTile';\r\n\r\nexport const HomePage = () => {\r\n  const [teams, setTeams] = useState([]);\r\n\r\n  useEffect ( () => {\r\n    const fetchAllTeams = async () => {\r\n      const response = await fetch(`http://localhost:8080/team`);\r\n      const data = await response.json();\r\n      setTeams(data);\r\n    };\r\n    fetchAllTeams();\r\n  }, [] );\r\n\r\n  \r\n  return (\r\n    <div className=\"HomePage\">\r\n      <div className=\"header-section\">\r\n        <h1 className=\"app-name\">IPL Dashboard</h1>\r\n      </div>\r\n      <div className=\"team-grid\">\r\n          {teams.map(team => <TeamTile key={team.id} teamName={team.teamName}/>)}\r\n      </div>\r\n    </div>\r\n  );\r\n}","import './App.scss';\nimport {BrowserRouter as Router, Route,Switch} from 'react-router-dom';\nimport {TeamPage} from './pages/TeamPage';\nimport {MatchPage} from './pages/MatchPage';\nimport {HomePage} from './pages/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      \n      <Router>\n      <Switch>\n        <Route path = \"/teams/:teamName/matches/:year\"> \n           <MatchPage/>\n        </Route>\n        <Route path = \"/teams/:teamName\"> \n           <TeamPage/>\n        </Route>\n        <Route path = \"/teams\"> \n           <HomePage/>\n        </Route>\n        </Switch>\n      </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}